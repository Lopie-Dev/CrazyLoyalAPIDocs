{
  "openapi": "3.0.0",
  "info": {
    "title": "CrazyLoyal Partner API",
    "version": "1.0.0",
    "description": "Authenticated Partner API for CrazyLoyal"
  },
  "servers": [
    {
      "url": "https://api.crazyloyal.com/dev",
      "description": "Development Environment"
    },
    {
      "url": "https://api.crazyloyal.com/sandbox",
      "description": "Sandbox Environment"
    },
    {
      "url": "https://api.crazyloyal.com/prod",
      "description": "Production Environment"
    }
  ],
  "paths": {
    "/conversation-details": {
      "get": {
        "summary": "Get ConversationDetails- PartnerAPI",
        "description": "Retrieve details of a specific conversation by the conversationId which is built by  combining the CrazyLoyal email address or phone number with the customer email address or phone number.",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "14e8a330-82f8-4b12-a152-863108852c89"
          },
          {
            "name": "conversationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "apple@crazyloyal.com|banana@crazyloyal.com"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "conversationStatus": {
                      "type": "string",
                      "description": "The current status of the conversation (e.g., active, closed)."
                    },
                    "unread": {
                      "type": "boolean",
                      "description": "Indicates whether the conversation has unread messages."
                    },
                    "nextNudge": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of the next scheduled nudge, if any."
                    },
                    "assistantId": {
                      "type": "string",
                      "description": "Unique ID of the assistant assigned to the conversation."
                    },
                    "lastActivity": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of the last activity in the conversation."
                    },
                    "aiReplyOn": {
                      "type": "boolean",
                      "description": "Indicates if AI replies are enabled for this conversation."
                    },
                    "conversationType": {
                      "type": "string",
                      "description": "Type of the conversation (e.g., pulse, support)."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the conversation was created."
                    },
                    "conversationId": {
                      "type": "string",
                      "description": "Unique identifier for the conversation, typically a combination of participant identifiers."
                    },
                    "conversationChannel": {
                      "type": "string",
                      "description": "Channel through which the conversation is conducted (e.g., sms, web, email)."
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Unique identifier for the client associated with the conversation."
                    },
                    "nextNudgeAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the next nudge is scheduled."
                    },
                    "cusEmail": {
                      "type": ["string", "null"],
                      "description": "Customer's email address, if available."
                    },
                    "nudgeEnabled": {
                      "type": "string",
                      "description": "Indicates if nudges are enabled for this conversation."
                    },
                    "sentiment": {
                      "type": "string",
                      "description": "Sentiment of the conversation (e.g., positive, neutral, negative)."
                    },
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the conversation record."
                    },
                    "cusNumber": {
                      "type": "string",
                      "description": "Customer's phone number, if available."
                    },
                    "messageArray": {
                      "type": "array",
                      "description": "Chronological list of messages exchanged in the conversation.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "description": "The message content."
                          },
                          "role": {
                            "type": "string",
                            "description": "Role of the sender (user, assistant, system)."
                          },
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the message."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the message was created."
                          },
                          "author": {
                            "type": "string",
                            "description": "Identifier of the message sender (e.g., AI, user email, phone number)."
                          },
                          "direction": {
                            "type": "string",
                            "description": "Direction of the message (inbound or outbound)."
                          },
                          "authorName": {
                            "type": "string",
                            "description": "Display name of the message sender."
                          }
                        },
                        "required": ["content", "role"]
                      }
                    }
                  },
                  "required": [
                    "conversationStatus",
                    "unread",
                    "assistantId",
                    "conversationId",
                    "clientId",
                    "id",
                    "messageArray"
                  ]
                },
                "example": {
                  "conversationStatus": "active",
                  "unread": false,
                  "nextNudge": "2025-06-17T15:32:54.368Z",
                  "assistantId": "8cddbee7-7bd2-40fc-90bc-b742967cfa3e",
                  "lastActivity": "2025-06-17T15:32:54.368Z",
                  "aiReplyOn": false,
                  "conversationType": "pulse",
                  "createdAt": "2025-06-17T15:15:29.037Z",
                  "conversationId": "+15556786543|+15557172345",
                  "conversationChannel": "sms",
                  "clientId": "43387161-f470-4a3a-96f3-f117700e879d",
                  "nextNudgeAt": "2025-06-17T15:15:28.937Z",
                  "cusEmail": null,
                  "nudgeEnabled": "true",
                  "sentiment": "positive",
                  "id": "f82c6563-282e-4195-a73b-2593e4c0b606",
                  "cusNumber": "+15558976152",
                  "messageArray": [
                    {
                      "content": "Hello! I'm La Sabrosita Cantina's virtual assistant. How can I help you today?",
                      "role": "assistant",
                      "id": "d9463e8f-b3e1-45c6-abc2-1979c18902c6"
                    },
                    {
                      "createdAt": "2025-06-17T15:15:31.208Z",
                      "role": "assistant",
                      "id": "a63c5d67-7524-4485-a58a-cba533b37cfe",
                      "content": "Hello! I'm La Sabrosita Cantina's virtual assistant. How can I help you today?",
                      "author": "ai",
                      "direction": "outbound",
                      "authorName": "CrazyLoyal AI"
                    },
                    {
                      "createdAt": "2025-06-17T15:33:04.489Z",
                      "role": "user",
                      "content": "What are your hours?",
                      "author": "user",
                      "direction": "inbound"
                    },
                    {
                      "content": "\n  Instructions:\n  - Today's date is June 17, 2025\n  - You are a virtual assistant for La Sabrosita Cantina. Your job is to assist customers and answer any of their questions about the business.\n  \n  Objective:\n  - undefined\n  \n  Drive the conversation to gather this Required Information:\n  [\n  \"name\",\n  \"company\",\n  \"address\",\n  \"notes\",\n  \"phone\",\n  \"email\"\n]\n  \n  Reference Data:\n  - Client's foundational data about the company:\n  [\n  {\n    \"value\": \"La Sabrosita â€“ Botanero Grill & Cantina is a Mexican Restaurant delivering authentic Mexican flavor directly to your table with unique touches. The flavors of the Aztec lands are transferred to your plate.\",\n    \"key\": \"Business Description\"\n  },\n  {\n    \"value\": \"Sunday Brunch 8 am â€“ 1 pm; Saturday & Sunday Brunch 8 am â€“ 2 pm; Live Entertainment: Tuesday - Taco Tuesday and Karaoke; Thursday - Industry Night; Friday - Latino Night; Saturday - Latino Night; Sunday - Karaoke.\",\n    \"key\": \"Hours of Operation\"\n  },\n  {\n    \"value\": \"2010 Birch Rd #101, Chula Vista, CA 91915, United States\",\n    \"key\": \"Business Address\"\n  },\n  {\n    \"value\": \"555 765 7890\",\n    \"key\": \"Business Phone Number\"\n  },\n  {\n    \"value\": \"Lsbotanero@gmail.com\",\n    \"key\": \"Business Email\"\n  }\n]\n  - Client's contextual data:\n  null\n  \n  \n    Requires Response Format:\n  You must respond with a JSON object in the following format:\n  {\"response\": \"[Your response here]\", \"escalate\": [true or false], \"escalationReason\": \"\", \"sentiment\": \"[positive, neutral, or negative]\"}\n  \n  Important:\n  \n  - The entire response should be a single line of valid JSON without any extra spaces, line breaks, or indentation.\n  - Do not include any newlines or escape characters in the \"response\" field.\n  - Ensure that the JSON is properly formatted and can be parsed using JSON.parse().\n  - Do not include any text before or after the JSON object.\n  - Sentiment should be defined as the users interest in the services being offered. If the user is interested, the sentiment should be positive. If the user is not interested, the sentiment should be negative. If the user is neutral, the sentiment should be neutral.\n  \n  Example Response:\n  \n  {\"response\": \"Hello, how can I assist you today?\", \"escalate\": false, \"escalationReason\": \"\", \"sentiment\": \"neutral\"}\n  \n  ",
                      "role": "system"
                    },
                    {
                      "createdAt": "2025-06-17T15:33:07.216Z",
                      "content": "{\"response\": \"Our business hours are as follows: Sunday Brunch is from 8 am to 1 pm; Saturday and Sunday Brunch from 8 am to 2 pm. We also have live entertainment on Tuesday for Taco Tuesday and Karaoke, Thursday for Industry Night, Friday and Saturday for Latino Night, and Sunday for Karaoke. Let me know if there's anything else I can assist you with!\", \"escalate\": false, \"escalationReason\": \"\", \"sentiment\": \"positive\"}",
                      "role": "assistant"
                    },
                    {
                      "createdAt": "2025-06-17T15:33:09.521Z",
                      "role": "assistant",
                      "id": "4b6495b9-c87e-4d3b-9ba6-797b9234acfc",
                      "content": "Our business hours are as follows: Sunday Brunch is from 8 am to 1 pm; Saturday and Sunday Brunch from 8 am to 2 pm. We also have live entertainment on Tuesday for Taco Tuesday and Karaoke, Thursday for Industry Night, Friday and Saturday for Latino Night, and Sunday for Karaoke. Let me know if there's anything else I can assist you with!",
                      "author": "ai",
                      "direction": "outbound",
                      "authorName": "CrazyLoyal AI"
                    },
                    {
                      "createdAt": "2025-06-18T01:40:21.163Z",
                      "role": "assistant",
                      "id": "8ee56dc4-e3c7-460a-992b-d06c279107ey",
                      "content": "Test",
                      "author": "sms|682667a02e2ce2ea0293a88",
                      "direction": "outbound",
                      "authorName": "The Tester"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/get-transactions": {
      "get": {
        "summary": "Get Transactions - PartnerAPI",
        "description": "Retrieve a list of transactions associated with the specified clientId, including details such as amounts, dates, type, and channel",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "43387161-f470-4a3a-96f3-f117700e837sh"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "remainingBalance": {
                            "type": "number",
                            "description": "The balance remaining after this transaction."
                          },
                          "contact": {
                            "type": "string",
                            "description": "The contact associated with the transaction (e.g., user email or System)."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time when the transaction occurred."
                          },
                          "amount": {
                            "type": "number",
                            "description": "The amount of the transaction."
                          },
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the transaction."
                          },
                          "transactionType": {
                            "type": "string",
                            "description": "The type of transaction (e.g., Funds Added, Outbound Message)."
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Unique identifier for the client associated with the transaction."
                          },
                          "channel": {
                            "type": "string",
                            "description": "The channel through which the transaction was made (e.g., email, sms, N/A)."
                          }
                        },
                        "required": [
                          "remainingBalance",
                          "contact",
                          "createdAt",
                          "amount",
                          "id",
                          "transactionType",
                          "clientId",
                          "channel"
                        ]
                      }
                    }
                  },
                  "required": ["transactions"]
                },
                "example": {
                  "transactions": [
                    {
                      "remainingBalance": 100995,
                      "contact": "System",
                      "createdAt": "2025-06-13T20:33:36.456Z",
                      "amount": 500,
                      "id": "791d3c98-3a05-4436-bc9e-c073065cd79e",
                      "transactionType": "Funds Added",
                      "clientId": "43387161-f470-4a3a-96f3-f117700e879d",
                      "channel": "N/A"
                    },
                    {
                      "remainingBalance": 100495,
                      "contact": "billyMadison@crazyloyal.com",
                      "createdAt": "2025-06-13T20:31:52.251Z",
                      "amount": 2.5,
                      "id": "95b83d19-253e-4660-808a-c6f09f885f05",
                      "transactionType": "Outbound Message",
                      "clientId": "43387161-f470-4a3a-96f3-f117700e879d",
                      "channel": "email"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/get-view": {
      "get": {
        "summary": "Get View - PartnerAPI",
        "description": "Retrieve a predefined view configuration by specifying the clientId and view name, such as Dashboard, to access customized content layouts or settings.",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "d9463e8f-b3e1-45c6-abc2-1979c18902c6"
          },
          {
            "name": "view",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "conversations"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "conversations": {
                      "type": "array",
                      "description": "List of conversation objects.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "notificationPreference": {
                            "type": "string",
                            "description": "Notification preference of the conversation participant."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp when the participant was added."
                          },
                          "mobileNumber": {
                            "type": "string",
                            "description": "Mobile number of the participant."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email of the participant."
                          },
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the participant."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the participant."
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Unique identifier for the client associated with the participant."
                          },
                          "type": {
                            "type": "string",
                            "description": "The user type."
                          }
                        },
                        "required": [
                          "notificationPreference",
                          "createdAt",
                          "id",
                          "name",
                          "clientId",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "conversations": [
                    {
                      "notificationPreference": "Email",
                      "createdAt": "2025-05-13T21:42:39.849Z",
                      "mobileNumber": "+15557865432",
                      "email": "kratos@crazyloyal.com",
                      "id": "sms|6823bcce2e2ce2ea029d2222",
                      "name": "Kratos",
                      "clientId": "43387161-f470-4a3a-96f3-f117700e888q",
                      "type": "Admin"
                    },
                    {
                      "notificationPreference": "SMS",
                      "createdAt": "2025-04-22T21:50:02.753Z",
                      "mobileNumber": "+15558760987",
                      "email": "atreus@crazyloyal.com",
                      "id": "sms|68080f0aef70814f534440000",
                      "name": "Atreus",
                      "clientId": "43387161-f470-4a3a-96f3-f117700e38847",
                      "type": "Admin"
                    },
                    {
                      "notificationPreference": "SMS",
                      "createdAt": "2025-06-13T20:36:05.390Z",
                      "mobileNumber": "+15556789876",
                      "email": "twon@crazyloyal.com",
                      "id": "sms|684c8bb51008a614ce3900",
                      "name": "Twon",
                      "clientId": "43387161-f470-4a3a-96f3-f117700e879d",
                      "type": "Member"
                    },
                    {
                      "notificationPreference": "SMS",
                      "createdAt": "2025-05-09T14:53:44.235Z",
                      "mobileNumber": "+15557862345",
                      "email": "baldr@crazyloyal.com",
                      "id": "sms|681e16f82e2ce2ea027424",
                      "name": "Baldr",
                      "clientId": "43387161-f470-4a3a-96f3-f117700e8372",
                      "type": "Admin"
                    },
                    {
                      "notificationPreference": "SMS",
                      "createdAt": "2025-05-15T22:16:03.687Z",
                      "mobileNumber": "+15551234321",
                      "email": "bob@crazyloyal.com",
                      "id": "sms|682667a02e2ce2ea0293a324",
                      "name": "Bob",
                      "clientId": "43387161-f470-4a3a-96f3-f117700e8e723",
                      "type": "Admin"
                    },
                    {
                      "notificationPreference": "SMS",
                      "createdAt": "2025-05-09T18:04:52.107Z",
                      "mobileNumber": "+15556789765",
                      "email": "brok@crazyloyal.com",
                      "id": "sms|681e43c02e2ce2ea02620492",
                      "name": "Brok",
                      "clientId": "43387161-f470-4a3a-96f3-f117700e8wy63",
                      "type": "Admin"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/update-assistant": {
      "post": {
        "summary": "Update Assistant - PartnerAPI",
        "description": "Create a new user associated with a specific clientId by providing user details such as name, email, mobile number, user type, and notification preference.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$metadata": {
                      "type": "object",
                      "properties": {
                        "httpStatusCode": {
                          "type": "integer"
                        },
                        "requestId": {
                          "type": "string"
                        },
                        "attempts": {
                          "type": "integer"
                        },
                        "totalRetryDelay": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "httpStatusCode",
                        "requestId",
                        "attempts",
                        "totalRetryDelay"
                      ]
                    }
                  },
                  "required": ["$metadata"]
                },
                "example": {
                  "$metadata": {
                    "httpStatusCode": 200,
                    "requestId": "JHM0Q1767LOSD1VJ5LROLJN7NJVV4KQNSO5AEMVJF66Q9ASUAAJG",
                    "attempts": 1,
                    "totalRetryDelay": 0
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "requiredInformation": {
                    "type": "object"
                  },
                  "campaignAiInstructions": {
                    "type": "string"
                  },
                  "nudgeInterval": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "firstMessage": {
                    "type": "string"
                  },
                  "contextualData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "value": { "type": "string" },
                        "key": { "type": "string" }
                      },
                      "required": ["value", "key"]
                    }
                  },
                  "actionOnSuccess": {
                    "type": "object",
                    "properties": {
                      "action": { "type": "string" },
                      "url": { "type": "string" }
                    },
                    "required": ["action", "url"]
                  },
                  "objective": {
                    "type": "string"
                  },
                  "dynamicFields": {
                    "type": "array",
                    "items": { "type": "object" }
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "escalationContact": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string" },
                      "email": { "type": "string" }
                    },
                    "required": ["name", "email"]
                  }
                },
                "required": [
                  "requiredInformation",
                  "campaignAiInstructions",
                  "nudgeInterval",
                  "createdAt",
                  "name",
                  "clientId",
                  "firstMessage",
                  "contextualData",
                  "actionOnSuccess",
                  "objective",
                  "dynamicFields",
                  "id",
                  "escalationContact"
                ]
              },
              "example": {
                "requiredInformation": {},
                "campaignAiInstructions": "Tell them about the specials",
                "nudgeInterval": "100",
                "createdAt": "2025-05-19T20:23:58.523Z",
                "name": "Soccer>Chess",
                "clientId": "43387161-f470-4a3a-96f3-f117700e879d",
                "firstMessage": "Hi",
                "contextualData": [
                  {
                    "value": "Yes",
                    "key": "Is soccer better than chess? "
                  }
                ],
                "actionOnSuccess": {
                  "action": "webhook",
                  "url": ""
                },
                "objective": "Tell me about the restaurant ",
                "dynamicFields": [],
                "id": "87f71b99-b06b-4dcf-a379-3645c26756bf",
                "escalationContact": {
                  "name": "",
                  "email": ""
                }
              }
            }
          }
        }
      }
    },
    "/addqr-code": {
      "post": {
        "summary": "Add QR Code - PartnerAPI",
        "description": "Create and register a new QR code tied to a specific clientId by providing business details, a message, and a base64-encoded QR image.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "QR Code Saved Successfully"
                    },
                    "qrCodeUrl": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://assets.crazyloyal.com/dev/43387161-f470-4a3a-96f3-f117700e879d/1750350308338.png"
                    }
                  },
                  "required": ["message", "qrCodeUrl"]
                },
                "example": {
                  "message": "QR Code Saved Successfully",
                  "qrCodeUrl": "https://assets.crazyloyal.com/dev/43387161-f470-4a3a-96f3-f117700e879d/1750350308338.png"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "phone": { "type": "string", "format": "phone" },
                  "message": { "type": "string" },
                  "clientId": { "type": "string", "format": "uuid" },
                  "qrCode": { "type": "string", "description": "Base64-encoded image string" }
                },
                "required": ["name", "description", "phone", "message", "clientId", "qrCode"]
              },
              "example": {
                "name": "Crazy Loyal",
                "description": "Crazy Application",
                "phone": "+15559876543",
                "message": "Test Message",
                "clientId": "5167d2f1-70a4-4ad4-92bf-9d405301fd86",
                "qrCode": "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHe..." 
              }
            }
          }
        }
      }
    },
    "/bulksend-pulse": {
      "post": {
        "summary": "Bulk Send Assistant Conversations - PartnerAPI",
        "description": "Send bulk list of new messages and associate them with a specific agent or campaign",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "conversationId": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": ["conversationId", "status", "message"]
                  }
                },
                "example": [
                  {
                    "conversationId": "la.sabrosita.cantina@dev.crazyloyal.com|(650) 338-8965",
                    "status": "queued",
                    "message": "Conversation queued for processing"
                  }
                ]
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "assistantId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "senderNum": {
                    "type": "string"
                  },
                  "requests": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "messageType": {
                          "type": "string"
                        },
                        "cusEmail": {
                          "type": "string"
                        },
                        "dynamicFields": {
                          "type": "object"
                        }
                      },
                      "required": ["messageType", "cusEmail", "dynamicFields"]
                    }
                  }
                },
                "required": ["clientId", "assistantId", "senderNum", "requests"]
              },
              "example": {
                "clientId": "43387161-f470-4a3a-96f3-f117700e879d",
                "assistantId": "8a49f406-2379-4853-8f62-b90b171f53f8",
                "senderNum": "+15557778888",
                "requests": [
                  {
                    "messageType": "48ff57f7-5814-4688-84d6-7f7b1c3f1422",
                    "cusEmail": "blank@crazyloyal.com",
                    "dynamicFields": {}
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/web-chat": {
      "post": {
        "summary": "Web Chat Conversation - PartnerAPI",
        "description": "Send a message to an existing web chat thread by providing the clientId, threadId, and message content.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "aiResponse": {
                      "type": "string"
                    },
                    "threadId": {
                      "type": "string"
                    }
                  },
                  "required": ["aiResponse", "threadId"]
                },
                "example": {
                  "aiResponse": "Hey there! How can I help you today? Whether you're here to turn customer engagement into a magical conversion or just chat about CrazyLoyal's nifty tools, I've got you covered. Fire away with your questions! ðŸ˜Š",
                  "threadId": "8d6ab637-2105-47fb-9939-d457916f9f22"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "threadId": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "required": ["clientId", "threadId", "message"]
              },
              "example": {
                "clientId": "43387161-f470-4a3a-96f3-f117700e879d",
                "threadId": "",
                "message": "Hello"
              }
            }
          }
        }
      }
    },
    "/add-assistant": {
      "post": {
        "summary": "Add Assistant - PartnerAPI",
        "description": "Create or update a conversational assistant for a specific clientId by defining its personality, objectives, contextual FAQs, escalation handling, and webhook actions on success.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "ok"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "requiredInformation": {
                    "type": "object",
                    "properties": {
                      "birthDate": { "type": "string" },
                      "fullName": { "type": "string" },
                      "email": { "type": "string", "format": "email" }
                    },
                    "required": ["birthDate", "fullName", "email"]
                  },
                  "contextualData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "question": { "type": "string" },
                        "answer": { "type": "string" }
                      },
                      "required": ["question", "answer"]
                    }
                  },
                  "actionOnSuccess": {
                    "type": "object",
                    "properties": {
                      "action": { "type": "string" },
                      "url": { "type": "string", "format": "uri" }
                    },
                    "required": ["action", "url"]
                  },
                  "campaignAiInstructions": { "type": "string" },
                  "objective": { "type": "string" },
                  "dynamicFields": {
                    "type": "array",
                    "items": { "type": "object" }
                  },
                  "createdAt": { "type": "string", "format": "date-time" },
                  "name": { "type": "string" },
                  "clientId": { "type": "string", "format": "uuid" },
                  "firstMessage": { "type": "string" },
                  "escalationContact": {
                    "type": "object",
                    "properties": {
                      "method": { "type": "string" },
                      "name": { "type": "string" },
                      "email": { "type": "string", "format": "email" }
                    },
                    "required": ["method", "name", "email"]
                  }
                },
                "required": [
                  "requiredInformation",
                  "contextualData",
                  "actionOnSuccess",
                  "campaignAiInstructions",
                  "objective",
                  "dynamicFields",
                  "createdAt",
                  "name",
                  "clientId",
                  "firstMessage",
                  "escalationContact"
                ]
              },
              "example": {
                "requiredInformation": {
                  "birthDate": "",
                  "fullName": "",
                  "email": ""
                },
                "contextualData": [
                  {
                    "question": "What type of cars do you rent",
                    "answer": "We rent EV vehicles only. No internal combustion vehicles."
                  },
                  {
                    "question": "Where do I charge",
                    "answer": "We have partners everywhere, you can use our app to find the closest FREE charger."
                  },
                  {
                    "question": "Does it cost more than a regular car rental",
                    "answer": "No, the maintenance cost on EVs is cheaper so we pass that on to you. It's about 10% cheaper than a standard rental."
                  },
                  {
                    "question": "If they want to talk to a human",
                    "answer": "Follow the escalation logic."
                  }
                ],
                "actionOnSuccess": {
                  "action": "webhook",
                  "url": "https://webhook.yourdomain.com"
                },
                "campaignAiInstructions": "You are John from a car rental agency, Try to rent the user a car",
                "objective": "Get user to agree to rent a car",
                "dynamicFields": [],
                "createdAt": "2024-11-02T22:06:09.064Z",
                "name": "Demo Assistant 4",
                "clientId": "8e97e12f-43be-4b20-aaef-a47a4abfee4a",
                "firstMessage": "Hi, ${firstName}! Are you interested in renting a car from Ren & Stimpy car rentals",
                "escalationContact": {
                  "method": "email",
                  "name": "Bill Nye",
                  "email": "billnye@crazyloyal.com"
                }
              }
            }
          }
        }
      }
    },
    "/delete-record": {
    "post": {
      "summary": "Delete Record - PartnerAPI",
      "description": "Delete a specific record from the given table by providing the recordId and table name. In this example the a client is being deleted from the clients table.",
      "parameters": [],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "Record deleted"
              }
            }
          }
        }
      },
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "recordId": {
                  "type": "string",
                  "format": "uuid"
                },
                "table": {
                  "type": "string"
                }
              },
              "required": ["recordId", "table"]
            },
            "example": {
              "recordId": "2298d899-a4d7-4ea5-b6cb-c783756ac786",
              "table": "clients"
            }
          }
        }
      }
    }
  },
    "/bulkupdate-records": {
      "post": {
        "summary": "Bulk Update - PartnerAPI",
        "description": "Update a specific field across multiple records in the specified table by providing the clientId, target field, new value, and a list of recordIds.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "notificationPreference": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "mobileNumber": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "clientId": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "notificationPreference",
                            "createdAt",
                            "mobileNumber",
                            "email",
                            "id",
                            "name",
                            "clientId",
                            "type"
                          ]
                        }
                      }
                    }
                  },
                  "required": ["results"]
                },
                "example": {
                  "results": [
                    [
                      {
                        "notificationPreference": "Email",
                        "createdAt": "2025-05-13T21:42:39.849Z",
                        "mobileNumber": "+15559875555",
                        "email": "minister@crazyloya.com",
                        "id": "sms|6823bcce2e2ce2ea029d10fe",
                        "name": "Minny",
                        "clientId": "43387161-f470-4a3a-96f3-f117700e8",
                        "type": "Admin"
                      },
                      {
                        "notificationPreference": "SMS",
                        "createdAt": "2025-04-22T21:50:02.753Z",
                        "mobileNumber": "+15559875555",
                        "email": "slug@crazyloyal.com",
                        "id": "sms|68080f0aef70814f534443",
                        "name": "Sluggy",
                        "clientId": "43387161-f470-4a3a-96f3-f117700e",
                        "type": "Admin"
                      },
                      {
                        "notificationPreference": "SMS",
                        "createdAt": "2025-05-09T14:53:44.235Z",
                        "mobileNumber": "+15550005555",
                        "email": "stuntamn@crazyloyal.com",
                        "id": "sms|681e16f82e2ce2ea027427",
                        "name": "Stunt",
                        "clientId": "43387161-f470-4a3a-96f3-f11770072",
                        "type": "Admin"
                      },
                      {
                        "notificationPreference": "SMS",
                        "createdAt": "2025-05-15T22:16:03.687Z",
                        "mobileNumber": "+15559996754",
                        "email": "voyage@crazyloyal.com",
                        "id": "sms|682667a02e2ce2ea0293a0",
                        "name": "Voyage",
                        "clientId": "43387161-f470-4a3a-96f3-f117700e372",
                        "type": "Admin"
                      },
                      {
                        "notificationPreference": "SMS",
                        "createdAt": "2025-05-09T18:04:52.107Z",
                        "mobileNumber": "+15556664444",
                        "email": "dash@crazyloyal.com",
                        "id": "sms|681e43c02e2ce2ea02620492",
                        "name": "Dash",
                        "clientId": "43387161-f470-4a3a-96f3-f117700e8usw",
                        "type": "Admin"
                      }
                    ]
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "table": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "newValue": {
                    "type": "string"
                  },
                  "recordIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "required": ["clientId", "table", "field", "newValue", "recordIds"]
              },
              "example": {
                "clientId": "43387161-f470-4a3a-96f3-f117700e879d",
                "table": "conversations",
                "field": "sentiment",
                "newValue": "positive",
                "recordIds": [
                  "be5c98b0-e0c6-438d-9251-d3cf78b03be1"
                ]
              }
            }
          }
        }
      }
    },
    "/bulkdelete-records": {
      "post": {
        "summary": "Bulk Delete - PartnerAPI",
        "description": "Delete multiple records from the specified table by providing a list of recordIds.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "Records Deleted"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recordIds": {
                    "type": "array",
                    "description": "Array of record UUIDs to be deleted.",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "table": {
                    "type": "string",
                    "description": "The name of the table from which the records should be deleted."
                  }
                },
                "required": ["recordIds", "table"]
              },
              "example": {
                "recordIds": [
                  "6894f4f5-f85c-4058-b616-b7b6cd528c8b",
                  "6b82a258-ac8e-4d63-aed3-98fe53cbd490"
                ],
                "table": "conversations"
              }
            }
          }
        }
      }
    },
    "/update-client": {
      "post": {
        "summary": "Update Client - PartnerAPI",
        "description": "Update client account information by providing identifiers and associated details such as company name, user contact info, authentication IDs, and website.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "body": {
                      "type": "string"
                    }
                  },
                  "required": ["statusCode", "body"]
                },
                "example": {
                  "statusCode": 200,
                  "body": "{\"message\":\"Record updated successfully\",\"result\":\"{\\\"socialIds\\\":[{\\\"google\\\":\\\"\\\"}],\\\"defaultAssistant\\\":\\\"8cddbee7-7bd2-40fc-90bc-b742967cfa3e\\\",\\\"recordIds\\\":[\\\"4146b5d0-d7cd-4086-b4e3-380ff14d2819\\\"],...\"}"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientId": { "type": "string", "format": "uuid" },
                  "companyName": { "type": "string" },
                  "companyNumber": { "type": "string" },
                  "companyEmail": { "type": "string", "format": "email" },
                  "companyWebsite": { "type": "string", "format": "uri" },
                  "description": { "type": "string" },
                  "defaultAssistant": { "type": "string", "format": "uuid" },
                  "notificationUserArray": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "socialIds": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "google": { "type": "string" }
                      },
                      "required": ["google"]
                    }
                  },
                  "foundationalData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": { "type": "string" },
                        "value": { "type": "string" }
                      },
                      "required": ["key", "value"]
                    }
                  }
                },
                "required": [
                  "clientId",
                  "companyName",
                  "companyNumber",
                  "companyEmail",
                  "companyWebsite",
                  "description",
                  "defaultAssistant",
                  "notificationUserArray",
                  "socialIds",
                  "foundationalData"
                ]
              },
              "example": {
                "clientId": "43387161-f470-4a3a-96f3-f117700e879d",
                "companyName": "La Sabrosita Cantina",
                "companyNumber": "+15556755555",
                "companyEmail": "test@crazyloyal.com",
                "companyWebsite": "https://lasabrositacantina.com",
                "description": "Hello",
                "defaultAssistant": "8cddbee7-7bd2-40fc-90bc-b742967cfa3e",
                "notificationUserArray": [
                  "sms|68080f0aef70814f53444380"
                ],
                "socialIds": [
                  {
                    "google": ""
                  }
                ],
                "foundationalData": [
                  {
                    "key": "Business Description",
                    "value": "La Sabrosita â€“ Botanero Grill & Cantina is a Mexican Restaurant delivering authentic Mexican flavor directly to your table with unique touches. The flavors of the Aztec lands are transferred to your plate."
                  },
                  {
                    "key": "Hours of Operation",
                    "value": "Sunday Brunch 8 am â€“ 1 pm; Saturday & Sunday Brunch 8 am â€“ 2 pm; Live Entertainment: Tuesday - Taco Tuesday and Karaoke; Thursday - Industry Night; Friday - Latino Night; Saturday - Latino Night; Sunday - Karaoke."
                  },
                  {
                    "key": "Business Address",
                    "value": "2010 Birch Rd #101, Chula Vista, CA 91915, United States"
                  },
                  {
                    "key": "Business Phone Number",
                    "value": "555 349 3019"
                  },
                  {
                    "key": "Business Email",
                    "value": "Lsbotanero@gmail.com"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/send-message": {
      "post": {
        "summary": "Send Message - PartnerAPI",
        "description": "Send a message within an existing conversation by specifying the clientId, conversationId, message type, content, and customer contact information.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "body": { "type": "string" },
                    "numSegments": { "type": "string" },
                    "direction": { "type": "string" },
                    "from": { "type": "string" },
                    "to": { "type": "string" },
                    "dateUpdated": { "type": "string", "format": "date-time" },
                    "price": { "type": ["string", "null"] },
                    "errorMessage": { "type": ["string", "null"] },
                    "uri": { "type": "string" },
                    "accountSid": { "type": "string" },
                    "numMedia": { "type": "string" },
                    "status": { "type": "string" },
                    "messagingServiceSid": { "type": ["string", "null"] },
                    "sid": { "type": "string" },
                    "dateSent": { "type": ["string", "null"], "format": "date-time" },
                    "dateCreated": { "type": "string", "format": "date-time" },
                    "errorCode": { "type": ["string", "null"] },
                    "priceUnit": { "type": "string" },
                    "apiVersion": { "type": "string" },
                    "subresourceUris": {
                      "type": "object",
                      "properties": {
                        "media": { "type": "string" }
                      }
                    }
                  },
                  "required": ["body", "from", "to", "status", "sid"]
                },
                "example": {
                  "body": "This is CrazyLoyal AI",
                  "numSegments": "1",
                  "direction": "outbound-api",
                  "from": "+15556765555",
                  "to": "+15554325555",
                  "dateUpdated": "2025-06-19T18:05:28.000Z",
                  "price": null,
                  "errorMessage": null,
                  "uri": "/2010-04-01/Accounts/ACaf3fb8db1b5d98e2d2b84c43651b26d9/Messages/SMdb9f376e5ce9159cdf9fd5965eebf557.json",
                  "accountSid": "AXXXXXXXXXXXXXXXXXXX",
                  "numMedia": "0",
                  "status": "queued",
                  "messagingServiceSid": null,
                  "sid": "SMdb9f376e5ce9159cdf9fd5965eebf557",
                  "dateSent": null,
                  "dateCreated": "2025-06-19T18:05:28.000Z",
                  "errorCode": null,
                  "priceUnit": "USD",
                  "apiVersion": "2010-04-01",
                  "subresourceUris": {
                    "media": "/2010-04-01/Accounts/ACaf3fb8db1b5d98e2d2b84c43651b26d9/Messages/SMdb9f376e5ce9159cdf9fd5965eebf557/Media.json"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "messageBody": { "type": "string" },
                  "messageType": { "type": "string" },
                  "conversationId": { "type": "string" },
                  "subject": { "type": "string" },
                  "customerContactInfo": { "type": "string" },
                  "author": { "type": "string" },
                  "clientId": { "type": "string", "format": "uuid" }
                },
                "required": [
                  "messageBody",
                  "messageType",
                  "conversationId",
                  "customerContactInfo",
                  "author",
                  "clientId"
                ]
              },
              "example": {
                "messageBody": "This is CrazyLoyal AI",
                "messageType": "sms",
                "conversationId": "+15559085555|+15557895555",
                "subject": "Message from La Sabrosita Cantina",
                "customerContactInfo": "+15557895555",
                "author": "sms|68080f0aef70814f53444",
                "clientId": "43387161-f470-4a3a-96f3-f117700e8"
              }
            }
          }
        }
      }
    },
    "/presigned-url": {
      "post": {
        "summary": "Generate Presigned URL - PartnerAPI",
        "description": "Generate a presigned URL to securely upload or access a file without requiring direct authentication.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/scraper": {
      "post": {
        "summary": "Scrape URLs - PartnerAPI",
        "description": "Scrape content from one or more specified URLs for a given clientId, categorized by a data type such as additionalFoundationalData",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "example": {
                "urls": [
                  {
                    "url": "https://testers.com"
                  },
                  {
                    "url": "https://crazyloyal.com"
                  }
                ],
                "clientId": "43387161-f470-4a3a-96f3-f117700e8d97",
                "type": "additionalFoundationalData"
              }
            }
          }
        }
      }
    },
    "/updateai-response": {
      "post": {
        "summary": "Update AI Status/ Response - PartnerAPI",
        "description": "Update the AI response status of a specific record to either be turned on or off by providing its unique ID and the desired AI status flag (true or false).",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "aiReplyOn": {
                      "type": "boolean",
                      "description": "Indicates whether AI responses are enabled (true) or disabled (false) for the specified record."
                    },
                    "message": {
                      "type": "string",
                      "description": "Confirmation message indicating the update status."
                    }
                  },
                  "required": ["aiReplyOn", "message"]
                },
                "example": {
                  "aiReplyOn": true,
                  "message": "AI status updated"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "aiStatus": {
                    "type": "boolean",
                    "description": "Desired AI response status to set (true for enabled, false for disabled)."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The unique identifier of the record whose AI status is being updated."
                  }
                },
                "required": ["aiStatus", "id"]
              },
              "example": {
                "aiStatus": true,
                "id": "18132907-c375-4fb3-bd5e-cc05a8af1987"
              }
            }
          }
        }
      }
    }
  }
}
